--- ejabberd-2.0.0/src/ejabberd.cfg.example.orig	2008-02-21 11:02:12.000000000 +0100
+++ ejabberd-2.0.0/src/ejabberd.cfg.example	2008-02-22 14:57:55.000000000 +0100
@@ -2,6 +2,12 @@
 %%%               ejabberd configuration file
 %%%
 
+%%% This is a setup for working "localhost" server.
+%%% To make fully functional world-accessible Jabber server you will need to:
+%%% - change 'localhost' everywhere below to your desired Jabber server domain name
+%%% - provide SSL certificates and uncomment ssl settings
+%%% - modify everything else according to your needs
+
 %%% The parameters used in this configuration file are explained in more detail
 %%% in the ejabberd Installation and Operation Guide.
 %%% Please consult the Guide in case of doubts, it is included in 
@@ -138,14 +144,16 @@
   %%
   %% ejabberd_service: Interact with external components (transports...)
   %%
-  %%{8888, ejabberd_service, [
-  %%			    {access, all}, 
-  %%			    {shaper_rule, fast},
-  %%			    {ip, {127, 0, 0, 1}},
-  %%			    {hosts, ["icq.example.org", "sms.example.org"],
-  %%			     [{password, "secret"}]
-  %%			    }
-  %%			   ]},
+  %%To enable more than one you _must_ change port numbers (here and in service's config)
+  %% {5347, ejabberd_service, [{access, all},
+  %%			    {hosts, ["icq.localhost", "sms.localhost"],
+  %%			     [{password, ">secret<"}]}]},
+  %% {5347, ejabberd_service, [{access, all},
+  %%			    {host, "gg.localhost",
+  %%			     [{password, ">secret<"}]}]},
+  %% {5347, ejabberd_service, [{access, all},
+  %%			    {hosts, ["ircnet.localhost", "freenode.localhost"],
+  %%			     [{password, ">secret<"}]}]},
 
   {5280, ejabberd_http, [
 			 http_poll, 
@@ -374,9 +382,9 @@
 %% All users are allowed to use MUC service:
 {access, muc, [{allow, all}]}.
 
-%% Every username can be registered via in-band registration:
-%% To disable in-band registration, replace 'allow' with 'deny'.
-{access, register, [{allow, all}]}.
+%% In-band registration disabled, let the admin decide who will use his server
+%% replace "deny, all" with "allow, all" to enable in-band registration
+{access, register, [{deny, all}]}.
 
 %% Everybody can create pubsub nodes
 {access, pubsub_createnode, [{allow, all}]}.
